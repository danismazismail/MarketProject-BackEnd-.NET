// <auto-generated />
using System;
using DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Context.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240706132438_ProductAddeded")]
    partial class ProductAddeded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationCore.Entities.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(750)
                        .HasColumnType("nvarchar(750)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 6, 16, 24, 37, 429, DateTimeKind.Local).AddTicks(4998),
                            Description = "Sebze ve Meyve ürünleri bulunur",
                            Name = "Manav",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 6, 16, 24, 37, 429, DateTimeKind.Local).AddTicks(5011),
                            Description = "Teknolojik ürünler bulunur",
                            Name = "Teknoloji",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 6, 16, 24, 37, 429, DateTimeKind.Local).AddTicks(5012),
                            Description = "Kahvaltılık ürünler bulunur",
                            Name = "Şarküteri",
                            Status = 1
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 7, 6, 16, 24, 37, 429, DateTimeKind.Local).AddTicks(5409),
                            Name = "Elma",
                            Price = 2.5,
                            Quantity = 100,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 7, 6, 16, 24, 37, 429, DateTimeKind.Local).AddTicks(5413),
                            Name = "Armut",
                            Price = 3.0,
                            Quantity = 80,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 7, 6, 16, 24, 37, 429, DateTimeKind.Local).AddTicks(5416),
                            Name = "Domates",
                            Price = 1.75,
                            Quantity = 120,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 7, 6, 16, 24, 37, 429, DateTimeKind.Local).AddTicks(5418),
                            Name = "Salatalık",
                            Price = 1.5,
                            Quantity = 90,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 7, 6, 16, 24, 37, 429, DateTimeKind.Local).AddTicks(5420),
                            Name = "Portakal",
                            Price = 3.25,
                            Quantity = 70,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 7, 6, 16, 24, 37, 429, DateTimeKind.Local).AddTicks(5423),
                            Name = "Laptop",
                            Price = 3500.0,
                            Quantity = 50,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 7, 6, 16, 24, 37, 429, DateTimeKind.Local).AddTicks(5425),
                            Name = "Akıllı Telefon",
                            Price = 2500.0,
                            Quantity = 80,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 7, 6, 16, 24, 37, 429, DateTimeKind.Local).AddTicks(5427),
                            Name = "Tablet",
                            Price = 1500.0,
                            Quantity = 60,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 7, 6, 16, 24, 37, 429, DateTimeKind.Local).AddTicks(5430),
                            Name = "Oyun Konsolu",
                            Price = 2000.0,
                            Quantity = 40,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 7, 6, 16, 24, 37, 429, DateTimeKind.Local).AddTicks(5432),
                            Name = "Kulaklık",
                            Price = 100.0,
                            Quantity = 200,
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 7, 6, 16, 24, 37, 429, DateTimeKind.Local).AddTicks(5434),
                            Name = "Sucuk",
                            Price = 20.0,
                            Quantity = 30,
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 7, 6, 16, 24, 37, 429, DateTimeKind.Local).AddTicks(5437),
                            Name = "Peynir",
                            Price = 15.0,
                            Quantity = 50,
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 7, 6, 16, 24, 37, 429, DateTimeKind.Local).AddTicks(5439),
                            Name = "Zeytin",
                            Price = 10.0,
                            Quantity = 80,
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 7, 6, 16, 24, 37, 429, DateTimeKind.Local).AddTicks(5442),
                            Name = "Bal",
                            Price = 25.0,
                            Quantity = 40,
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 7, 6, 16, 24, 37, 429, DateTimeKind.Local).AddTicks(5444),
                            Name = "Reçel",
                            Price = 12.0,
                            Quantity = 60,
                            Status = 1
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Concrete.Product", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Concrete.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
